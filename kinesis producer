AWSTemplateFormatVersion: '2010-09-09'
Description: |
  CloudFormation template to deploy an EC2 instance that continuously generates 
  and pushes 10,000 CloudTrail-like API log entries per second to CloudWatch Logs.

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance.
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.large  # Upgraded instance type for higher performance
    AllowedValues:
      - t3.large
      - t3.xlarge
      - t3.2xlarge

Resources:
  DummyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: DummyLogGroup
      RetentionInDays: 14

  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:DummyLogGroup:*

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2InstanceRole
      Path: /

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: ami-0c94855ba95c71c99  # Amazon Linux 2 AMI in us-east-1
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash
          set -e

          # Update system and install required packages
          yum update -y
          yum install -y amazon-cloudwatch-agent jq

          # Configure CloudWatch Agent to collect logs from /var/log/dummy.log
          cat > /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json << 'EOF'
          {
              "logs": {
                  "logs_collected": {
                      "files": {
                          "collect_list": [
                              {
                                  "file_path": "/var/log/dummy.log",
                                  "log_group_name": "DummyLogGroup",
                                  "log_stream_name": "{instance_id}",
                                  "timezone": "UTC"
                              }
                          ]
                      }
                  }
              }
          }
          EOF

          # Start CloudWatch Agent
          /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl \
            -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s

          # Optimize log generation
          echo "Starting high-speed CloudTrail log generation..."

          # Generate 10,000 log entries per second
          nohup bash -c '
          while true; do
            timestamp=$(date -u +%Y-%m-%dT%H:%M:%SZ)
            for i in {1..10000}; do
              echo "{
                \"eventVersion\": \"1.08\",
                \"userIdentity\": {
                  \"type\": \"IAMUser\",
                  \"principalId\": \"EXAMPLEPRINCIPALID\",
                  \"arn\": \"arn:aws:iam::123456789012:user/Alice\",
                  \"accountId\": \"123456789012\",
                  \"accessKeyId\": \"EXAMPLEACCESSKEYID\",
                  \"userName\": \"Alice\"
                },
                \"eventTime\": \"$timestamp\",
                \"eventSource\": \"ec2.amazonaws.com\",
                \"eventName\": \"StartInstances\",
                \"awsRegion\": \"us-east-1\",
                \"sourceIPAddress\": \"192.0.2.0\",
                \"userAgent\": \"aws-cli/1.18.69\",
                \"requestParameters\": {
                  \"instancesSet\": {
                    \"items\": [
                      {
                        \"instanceId\": \"i-1234567890abcdef0\"
                      }
                    ]
                  }
                },
                \"responseElements\": {
                  \"instancesSet\": {
                    \"items\": [
                      {
                        \"instanceId\": \"i-1234567890abcdef0\",
                        \"currentState\": {
                          \"code\": 0,
                          \"name\": \"pending\"
                        },
                        \"previousState\": {
                          \"code\": 80,
                          \"name\": \"stopped\"
                        }
                      }
                    ]
                  }
                },
                \"requestID\": \"req-$(date +%s)-$i\",
                \"eventID\": \"evt-$(date +%s)-$i\",
                \"readOnly\": false,
                \"resources\": [
                  {
                    \"ARN\": \"arn:aws:ec2:us-east-1:123456789012:instance/i-1234567890abcdef0\",
                    \"accountId\": \"123456789012\",
                    \"type\": \"AWS::EC2::Instance\"
                  }
                ],
                \"eventType\": \"AwsApiCall\",
                \"managementEvent\": true,
                \"recipientAccountId\": \"123456789012\"
              }" >> /var/log/dummy.log
            done
            sleep 1
          done
          ' &

Outputs:
  InstanceId:
    Description: ID of the EC2 instance
    Value: !Ref EC2Instance
  LogGroupName:
    Description: CloudWatch Log Group for dummy logs
    Value: !Ref DummyLogGroup
